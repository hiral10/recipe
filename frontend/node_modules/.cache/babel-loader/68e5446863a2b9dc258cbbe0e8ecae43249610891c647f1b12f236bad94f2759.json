{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hiral\\\\Documents\\\\recipe\\\\frontend\\\\src\\\\component\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './test.css';\nimport { config } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [image, setImage] = useState({\n    preview: '',\n    data: ''\n  });\n  const [status, setStatus] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('file', image.data);\n    console.log(formData);\n    const response = await fetch(`${config.endpoint}/recipe/upload`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        image: formData\n      })\n    }).json();\n    if (response) setStatus(response.statusText);\n  };\n  const handleFileChange = e => {\n    const img = {\n      preview: URL.createObjectURL(e.target.files[0]),\n      data: e.target.files[0]\n    };\n    setImage(img);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload to server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), image.preview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.preview,\n        width: \"100\",\n        height: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), status && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n_s(Test, \"FY1kHvS98krMLxgJpqxfHVdc8KQ=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","config","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","image","setImage","preview","data","status","setStatus","handleSubmit","e","preventDefault","formData","FormData","append","console","log","response","fetch","endpoint","method","headers","body","JSON","stringify","json","statusText","handleFileChange","img","URL","createObjectURL","target","files","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","onSubmit","type","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Hiral/Documents/recipe/frontend/src/component/test.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './test.css'\r\nimport { config } from \"../App\";\r\n\r\nconst Test = () => {\r\n\r\n  const [image, setImage] = useState({ preview: '', data: '' })\r\n  const [status, setStatus] = useState('')\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    let formData = new FormData()\r\n    formData.append('file', image.data)\r\n    console.log(formData)\r\n    const response = await fetch(`${config.endpoint}/recipe/upload`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        image:formData\r\n      }),\r\n    }).json()\r\n    if (response) setStatus(response.statusText)\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    const img = {\r\n      preview: URL.createObjectURL(e.target.files[0]),\r\n      data: e.target.files[0],\r\n    }\r\n    setImage(img)\r\n  }\r\n\r\n  return (\r\n    <>\r\n       <div className='App'>\r\n      <h1>Upload to server</h1>\r\n      {image.preview && <img src={image.preview} width='100' height='100' />}\r\n      <hr></hr>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type='file' name='file' onChange={handleFileChange}></input>\r\n        <button type='submit'>Submit</button>\r\n      </form>\r\n      {status && <h4>{status}</h4>}\r\n    </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Test\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAAEU,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC7D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,KAAK,CAACG,IAAI,CAAC;IACnCS,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEtB,MAAM,CAACuB,QAAS,gBAAe,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBrB,KAAK,EAACS;MACR,CAAC;IACH,CAAC,CAAC,CAACa,IAAI,CAAC,CAAC;IACT,IAAIR,QAAQ,EAAET,SAAS,CAACS,QAAQ,CAACS,UAAU,CAAC;EAC9C,CAAC;EAED,MAAMC,gBAAgB,GAAIjB,CAAC,IAAK;IAC9B,MAAMkB,GAAG,GAAG;MACVvB,OAAO,EAAEwB,GAAG,CAACC,eAAe,CAACpB,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC/C1B,IAAI,EAAEI,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAC,CAAC;IACxB,CAAC;IACD5B,QAAQ,CAACwB,GAAG,CAAC;EACf,CAAC;EAED,oBACE9B,OAAA,CAAAE,SAAA;IAAAiC,QAAA,eACGnC,OAAA;MAAKoC,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACrBnC,OAAA;QAAAmC,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBnC,KAAK,CAACE,OAAO,iBAAIP,OAAA;QAAKyC,GAAG,EAAEpC,KAAK,CAACE,OAAQ;QAACmC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtExC,OAAA;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxC,OAAA;QAAM4C,QAAQ,EAAEjC,YAAa;QAAAwB,QAAA,gBAC3BnC,OAAA;UAAO6C,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAElB;QAAiB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnExC,OAAA;UAAQ6C,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACN/B,MAAM,iBAAIT,OAAA;QAAAmC,QAAA,EAAK1B;MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC,gBAEJ,CAAC;AAEP,CAAC;AAAApC,EAAA,CA5CKD,IAAI;AAAA6C,EAAA,GAAJ7C,IAAI;AA8CV,eAAeA,IAAI;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}